//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public PositionAddedListenerComponent PositionAddedListener { get { return (PositionAddedListenerComponent)GetComponent(GameComponentsLookup.PositionAddedListener); } }
	public bool HasPositionAddedListener { get { return HasComponent(GameComponentsLookup.PositionAddedListener); } }

	public void AddPositionAddedListener(System.Collections.Generic.List<IPositionAddedListener> newValue)
	{
		var index = GameComponentsLookup.PositionAddedListener;
		var component = (PositionAddedListenerComponent)CreateComponent(index, typeof(PositionAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		AddComponent(index, component);
	}

	public void ReplacePositionAddedListener(System.Collections.Generic.List<IPositionAddedListener> newValue)
	{
		var index = GameComponentsLookup.PositionAddedListener;
		var component = (PositionAddedListenerComponent)CreateComponent(index, typeof(PositionAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyPositionAddedListenerTo(PositionAddedListenerComponent copyComponent)
	{
		var index = GameComponentsLookup.PositionAddedListener;
		var component = (PositionAddedListenerComponent)CreateComponent(index, typeof(PositionAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = copyComponent.value;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemovePositionAddedListener()
	{
		RemoveComponent(GameComponentsLookup.PositionAddedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity : IPositionAddedListenerEntity { }

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherPositionAddedListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> PositionAddedListener
	{
		get
		{
			if (_matcherPositionAddedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.PositionAddedListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherPositionAddedListener = matcher;
			}

			return _matcherPositionAddedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public void AddPositionAddedListener(IPositionAddedListener value)
	{
		var listeners = HasPositionAddedListener
			? PositionAddedListener.value
			: new System.Collections.Generic.List<IPositionAddedListener>();
		listeners.Add(value);
		ReplacePositionAddedListener(listeners);
	}

	public void RemovePositionAddedListener(IPositionAddedListener value, bool removeComponentWhenEmpty = true)
	{
		var listeners = PositionAddedListener.value;
		listeners.Remove(value);
		if (removeComponentWhenEmpty && listeners.Count == 0)
		{
			RemovePositionAddedListener();
		}
		else
		{
			ReplacePositionAddedListener(listeners);
		}
	}
}
