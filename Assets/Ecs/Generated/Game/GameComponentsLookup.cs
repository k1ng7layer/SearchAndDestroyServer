//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using JCMG.EntitasRedux;

public static class GameComponentsLookup
{
	public const int ConnectionId = 0;
	public const int Destroyed = 1;
	public const int GameCountdown = 2;
	public const int GameState = 3;
	public const int Gunner = 4;
	public const int Hostile = 5;
	public const int Input = 6;
	public const int InputRotation = 7;
	public const int Instantiate = 8;
	public const int Link = 9;
	public const int MoveDirection = 10;
	public const int Player = 11;
	public const int Position = 12;
	public const int Prefab = 13;
	public const int Rotation = 14;
	public const int RotationVelocity = 15;
	public const int Transform = 16;
	public const int Uid = 17;
	public const int GameCountdownAddedListener = 18;
	public const int InputAddedListener = 19;
	public const int InstantiateAddedListener = 20;
	public const int LinkRemovedListener = 21;
	public const int MoveDirectionAddedListener = 22;
	public const int PositionAddedListener = 23;
	public const int RotationAddedListener = 24;

	public const int TotalComponents = 25;

	public static readonly string[] ComponentNames =
	{
		"ConnectionId",
		"Destroyed",
		"GameCountdown",
		"GameState",
		"Gunner",
		"Hostile",
		"Input",
		"InputRotation",
		"Instantiate",
		"Link",
		"MoveDirection",
		"Player",
		"Position",
		"Prefab",
		"Rotation",
		"RotationVelocity",
		"Transform",
		"Uid",
		"GameCountdownAddedListener",
		"InputAddedListener",
		"InstantiateAddedListener",
		"LinkRemovedListener",
		"MoveDirectionAddedListener",
		"PositionAddedListener",
		"RotationAddedListener"
	};

	public static readonly System.Type[] ComponentTypes =
	{
		typeof(Ecs.Game.Components.ConnectionIdComponent),
		typeof(Ecs.Game.Components.DestroyedComponent),
		typeof(Ecs.Game.Components.GameCountdownComponent),
		typeof(Ecs.Game.Components.GameStateComponent),
		typeof(Ecs.Game.Components.GunnerComponent),
		typeof(Ecs.Game.Components.HostileComponent),
		typeof(Ecs.Game.Components.InputComponent),
		typeof(Ecs.Game.Components.InputRotationComponent),
		typeof(Ecs.Game.Components.InstantiateComponent),
		typeof(Ecs.Game.Components.LinkComponent),
		typeof(Ecs.Game.Components.MoveDirectionComponent),
		typeof(Ecs.Game.Components.PlayerComponent),
		typeof(Ecs.Game.Components.PositionComponent),
		typeof(Ecs.Game.Components.PrefabComponent),
		typeof(Ecs.Game.Components.RotationComponent),
		typeof(Ecs.Game.Components.RotationVelocityComponent),
		typeof(Ecs.Game.Components.TransformComponent),
		typeof(Ecs.Game.Components.UidComponent),
		typeof(GameCountdownAddedListenerComponent),
		typeof(InputAddedListenerComponent),
		typeof(InstantiateAddedListenerComponent),
		typeof(LinkRemovedListenerComponent),
		typeof(MoveDirectionAddedListenerComponent),
		typeof(PositionAddedListenerComponent),
		typeof(RotationAddedListenerComponent)
	};

	public static readonly Dictionary<Type, int> ComponentTypeToIndex = new Dictionary<Type, int>
	{
		{ typeof(Ecs.Game.Components.ConnectionIdComponent), 0 },
		{ typeof(Ecs.Game.Components.DestroyedComponent), 1 },
		{ typeof(Ecs.Game.Components.GameCountdownComponent), 2 },
		{ typeof(Ecs.Game.Components.GameStateComponent), 3 },
		{ typeof(Ecs.Game.Components.GunnerComponent), 4 },
		{ typeof(Ecs.Game.Components.HostileComponent), 5 },
		{ typeof(Ecs.Game.Components.InputComponent), 6 },
		{ typeof(Ecs.Game.Components.InputRotationComponent), 7 },
		{ typeof(Ecs.Game.Components.InstantiateComponent), 8 },
		{ typeof(Ecs.Game.Components.LinkComponent), 9 },
		{ typeof(Ecs.Game.Components.MoveDirectionComponent), 10 },
		{ typeof(Ecs.Game.Components.PlayerComponent), 11 },
		{ typeof(Ecs.Game.Components.PositionComponent), 12 },
		{ typeof(Ecs.Game.Components.PrefabComponent), 13 },
		{ typeof(Ecs.Game.Components.RotationComponent), 14 },
		{ typeof(Ecs.Game.Components.RotationVelocityComponent), 15 },
		{ typeof(Ecs.Game.Components.TransformComponent), 16 },
		{ typeof(Ecs.Game.Components.UidComponent), 17 },
		{ typeof(GameCountdownAddedListenerComponent), 18 },
		{ typeof(InputAddedListenerComponent), 19 },
		{ typeof(InstantiateAddedListenerComponent), 20 },
		{ typeof(LinkRemovedListenerComponent), 21 },
		{ typeof(MoveDirectionAddedListenerComponent), 22 },
		{ typeof(PositionAddedListenerComponent), 23 },
		{ typeof(RotationAddedListenerComponent), 24 }
	};

	/// <summary>
	/// Returns a component index based on the passed <paramref name="component"/> type; where an index cannot be found
	/// -1 will be returned instead.
	/// </summary>
	/// <param name="component"></param>
	public static int GetComponentIndex(IComponent component)
	{
		return GetComponentIndex(component.GetType());
	}

	/// <summary>
	/// Returns a component index based on the passed <paramref name="componentType"/>; where an index cannot be found
	/// -1 will be returned instead.
	/// </summary>
	/// <param name="componentType"></param>
	public static int GetComponentIndex(Type componentType)
	{
		return ComponentTypeToIndex.TryGetValue(componentType, out var index) ? index : -1;
	}
}
